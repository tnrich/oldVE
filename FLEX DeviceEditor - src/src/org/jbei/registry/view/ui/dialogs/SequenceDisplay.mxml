<?xml version="1.0" encoding="utf-8"?>
<!-- Author: Doug Densmore -->
<mx:TitleWindow 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	layout="absolute" 
	width="100%"
	height="100%" 
	title="Sequence Selection"
	showCloseButton="true"
	close="exitWithoutSequence()">
	

	<mx:Script>
		<![CDATA[
			import mx.controls.Spacer;
			import mx.controls.TextInput;
			import mx.containers.HBox;
			import mx.containers.VBox;
			import mx.events.ListEvent;
			import mx.controls.ComboBase;
			import mx.controls.Label;
			import mx.controls.ComboBox;
			import mx.controls.Button;
			import mx.controls.TextArea;
			import mx.controls.Text;
			
			import mx.managers.PopUpManager;
			
			import org.jbei.registry.api.Entry;
			import org.jbei.registry.api.FeaturedDNASequence;
			import org.jbei.registry.api.DnaFeature;
			
			import org.jbei.registry.view.ui.MappingBar;
			 
			import mx.collections.ArrayCollection;
			
			//FIXME - Not ideal that this is associated with a mapping panel
			private var _mappingBar:MappingBar;
			
			
			private var _entry:Entry;
			private var _sequence:FeaturedDNASequence;
			
			//FIXME - uber hack!!!
			private var sequenceTextArea:TextArea = new TextArea();
			private var mapButton:Button = new Button();
			private var featureSelectionComboBox:ComboBox = new ComboBox();
			private var featureSelection:Label = new Label();
			private var startBPLabel:Label = new Label();
			private var stopBPLabel:Label = new Label();
			private var startBPValue:TextInput= new TextInput();
			private var stopBPValue:TextInput = new TextInput();
			
	
			//Getter and Setter functions
			
			public function set mappingBar(mb:MappingBar):void
			{
				_mappingBar = mb;
			}
					
			public function set entry(e:Entry):void
			{
				_entry = e;
			}
			
			public function set sequence(s:FeaturedDNASequence):void
			{
				_sequence = s;
			}
			
			public function get entry():Entry
			{
				return _entry;
			}
			
			//FIXME - this is horrible! Really need to figure out how to init GUI components better
			public function initLayout():void
			{
					
					var vBox:VBox = new VBox();
					var hBox:HBox = new HBox();
	
					sequenceTextArea.width = 800;
					sequenceTextArea.height = 130;
					vBox.addChild(sequenceTextArea);
					
					mapButton.addEventListener(MouseEvent.CLICK, mapSequence);
					mapButton.label="Map Sequence to Icon";
					hBox.addChild(mapButton);
					
					featureSelectionComboBox.addEventListener(ListEvent.CHANGE, comboBoxChange);
					featureSelectionComboBox.labelField="name";
					hBox.addChild(featureSelectionComboBox);
					
					startBPLabel.text = "Start BP";

					stopBPLabel.text = "Stop BP";
					
					hBox.addChild(featureSelection);
					hBox.addChild(startBPLabel);
					hBox.addChild(startBPValue);
					hBox.addChild(stopBPLabel);
					hBox.addChild(stopBPValue);
					
					vBox.addChild(hBox);
					var space:Spacer = new Spacer();
					space.height = 10;
					vBox.addChild(space);
					addChild(vBox);
			
					//Ideally I would just have this in the header script code
					/*<mx:TextArea x="10" y="10" width="750" height="162" id="sequenceTextArea"/>
					<mx:Button x="10" y="180" label="Map Sequence to Icon" id="mapButton"/>
					<mx:ComboBox x="305" y="180" id="featureSelectionComboBox" close="comboBoxChange(event);"></mx:ComboBox>
					<mx:Label x="189" y="182" text="Feature Selection"/>
					<mx:Label x="10" y="210" text="Start BP" id="startBPLabel"/>
					<mx:Label x="64" y="209" id="startBPValue"/>
					<mx:Label x="91" y="209" text="Stop BP" id="stopBPLabel"/>
					<mx:Label x="147" y="209" id="stopBPValue"/>*/
			}
			
			
			
			
			//Get the sequence for this entry via the web service
			public function getSequence():void
			{				
				_mappingBar.getSequence();		
			}
			
			//This function will be called by the web service in response the the getSequence function call			
			public function displaySequence(featuredDNASequence:FeaturedDNASequence):void
			{
					initLayout();			
			 		_sequence = featuredDNASequence;
                    var features:ArrayCollection = new ArrayCollection();
                    //Add the entry in for the whole sequence
                    features.addItem({name:"Whole Sequence", start:"1", end:new Number(_sequence.sequence.length).toString(), type:"N/A"});
                    features.addItem({name:"Specified Sequence", start:"", end:"", type:"N/A"});
                    
                    if(featuredDNASequence.features && featuredDNASequence.features.length > 0) {
                       for(var i:int = 0; i < featuredDNASequence.features.length; i++) {
                       		var dnaFeature:DnaFeature = featuredDNASequence.features[i] as DnaFeature;
                                                
                            	 if(!dnaFeature) {
                                    	 continue;
                                 	}
                                    var typeString:String = "N/A";
                                    if (dnaFeature.type != null)
                                    		typeString = dnaFeature.type.toString();
                                    var nameString:String = "No Name";
                                    if (dnaFeature.name != null)
                                    	nameString = dnaFeature.name.toString();
                                    
                                    
                                    features.addItem({name:nameString, start:dnaFeature.start.toString(), end:dnaFeature.end.toString(), type:typeString});

                       }
                    }
                                                 
                   	//Set these to be the default
                   	startBPValue.text = "0";
					stopBPValue.text = new Number(_sequence.sequence.length-1).toString();
					startBPValue.enabled = false;
					stopBPValue.enabled = false;
                   	
                   	
                   	//Fill in the combo box with the feature info             
                   	featureSelectionComboBox.dataProvider = features;
                    
                                
					//Fill in the sequence text area
					sequenceTextArea.text = _sequence.sequence;	
				
					//Display this
					PopUpManager.addPopUp(this, _mappingBar.parent, true);
			    	PopUpManager.centerPopUp(this);

			}
	
	
			private function mapSequence(e:Event):void
			{
				
				//set the sequence for the shape		
				_mappingBar.mapSequence(_sequence, new Number(startBPValue.text), new Number(stopBPValue.text), featureSelectionComboBox.selectedItem.name)
				
				//now get the genbank file
				_mappingBar.getGenbank();
				
				//*****************************
				//FIXME - add the piece to get the FASTA file if the options are set to get FASTA files
				
				//Remove this
				PopUpManager.removePopUp(this);
			
			}
		
			//When the combo box changes, update the GUI information
			private function comboBoxChange(event:Event):void
			{
				startBPValue.text = ComboBox(event.target).selectedItem.start;
				stopBPValue.text = ComboBox(event.target).selectedItem.end;
				startBPValue.enabled = false;
				stopBPValue.enabled = false;
				
				if(ComboBox(event.target).selectedIndex == 1)
				{
					stopBPValue.text = "";
					startBPValue.text = "";
					startBPValue.enabled = true;
					stopBPValue.enabled = true;
				}
					
				
			}
			
			private function exitWithoutSequence():void
			{
				//_mappingBar.mainCanvas.selectedShape.myShapeObject.hasSequence(false);
				
				//Remove this
				PopUpManager.removePopUp(this);
			}
	
	
	]]>
	</mx:Script>
</mx:TitleWindow>

<?xml version="1.0" encoding="utf-8"?>
<!-- Author: Doug Densmore -->
<mx:Panel 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	layout="vertical" 
	width="100%" 
	height="100%"
    creationComplete="onCreationComplete()"
	>
	
	
	<mx:Script>
		<![CDATA[
            import mx.collections.ArrayCollection;
            import mx.utils.ObjectUtil;
            
            import org.jbei.registry.models.EugeneRule;
            import org.jbei.registry.models.PartVO;
		
            public static const UPDATE_PART_LABELS:String = "UpdatePartLabels";
            public static const EDIT_J5_NAME:String = "EditJ5Name";
            public static const CHANGE_PART_DEFINITION:String = "ChangePartDefinition";
            public static const EDIT_J5_FAS:String = "EditJ5FAS";
            public static const ADD_EUGENE_RULE:String = "AddEugeneRule";
            public static const DELETE_EUGENE_RULE:String = "DeleteEugeneRule";
            
            //FAS options
            public static const NO_FAS:String = "None";
            public static const DIGEST_FAS:String = "DIGEST";
            public static const DIRECT_SYNTHESIS_FAS:String = "Direct Synthesis";
            public static const PCR_FAS:String = "PCR";
            public static const REVERSE_PRIMER_FAS:String = "Embed_in_primer_reverse";
            public static const FORWARD_PRIMER_FAS:String = "Embed_in_primer_forward";
            public static const ANNEALED_OLIGOS_FAS:String = "Annealed Oligos";
            
            private function editJ5FAS(event:Event):void 
            {
                dispatchEvent(new Event(EDIT_J5_FAS));
            }
            
            private function editJ5Name(event:Event):void
            {
                dispatchEvent(new Event(EDIT_J5_NAME));
            }
            
            private function changePartDefinition(event:Event):void
            {
                dispatchEvent(new Event(CHANGE_PART_DEFINITION, true));
            }
            
            private function addRule():void
            {
                dispatchEvent(new Event(ADD_EUGENE_RULE));
            }
	
            private function deleteRule():void
            {
                dispatchEvent(new Event(DELETE_EUGENE_RULE));
            }
            
            private function createOperatorLabel(rule:EugeneRule, column:DataGridColumn):String
            {
                var operatorLabel:String = "";
                if (rule.negationOperator) {
                    operatorLabel += "NOT ";
                }
                operatorLabel += rule.compositionalOperator;
                return operatorLabel;
            }
            
            private function createOperand2Label(rule:EugeneRule, column:DataGridColumn):String
            {
                var operand2:String;
                if (rule.operand2 is Number) {
                    operand2 = (rule.operand2 as Number).toString();
                } else if (rule.operand2 is PartVO) {
                    operand2 = (rule.operand2 as PartVO).name;
                    if (operand2 == "") {
                        operand2 = "No name";
                    }
                }
                return operand2;
            }
            
            private function operatorSortFunction(a:EugeneRule, b:EugeneRule):int {
                return ObjectUtil.compare(createOperatorLabel(a, null), createOperatorLabel(b, null));
            }
            
            private function operand2SortFunction(a:EugeneRule, b:EugeneRule):int {
                return ObjectUtil.compare(createOperand2Label(a, null), createOperand2Label(b, null));
            }
            
            private function onCreationComplete():void
            {
                var fasChoices:ArrayCollection = new ArrayCollection();
                fasChoices.addItem(NO_FAS);
                fasChoices.addItem(DIGEST_FAS);
                fasChoices.addItem(DIRECT_SYNTHESIS_FAS);
                fasChoices.addItem(PCR_FAS);
                fasChoices.addItem(REVERSE_PRIMER_FAS);
                fasChoices.addItem(FORWARD_PRIMER_FAS);
                fasChoices.addItem(ANNEALED_OLIGOS_FAS);
                fasBox.dataProvider = fasChoices;
            }
	
		]]>
	</mx:Script>
	
	<mx:VBox width="100%" paddingLeft="5" paddingRight="5">
		
	<mx:Label id="mapWarningLabel" text="Map icon to a sequence to edit!" color="0xFF0000"/>
		
	<mx:HBox width="95%" paddingBottom="3" paddingTop="3">
		<mx:Label text="Part Name" id="partNameLabel"/>
		<mx:TextInput id="partNameInput" enabled="false"/>
        <mx:Button id="partNameSaveButton" label="Save" click="editJ5Name(event)" enabled="false"/>
	</mx:HBox>

    <mx:HBox width="95%" paddingBottom="3" paddingTop="3">
        <mx:Label text="Part Source: " id="partSourceLabel"/>
        <mx:Label id="partSourceValueLabel"/>
    </mx:HBox>
        
	<mx:HBox width="95%" paddingBottom="3" paddingTop="3">
        <mx:Label text="Reverse Complement? (on source): " id="reverseComplementLabel"/>
        <mx:Label id="reverseComplementValueLabel"/>
	</mx:HBox>
	
	<mx:HBox width="95%" paddingBottom="3" paddingTop="3">
			<mx:Label text="Start BP: " id="startBPLabel"/>
            <mx:Label id="genbankStartBPValueLabel"/>
	</mx:HBox>
	
	<mx:HBox width="95%" paddingBottom="3" paddingTop="3">
			<mx:Label text="Stop BP: " id="stopBPLabel"/>
            <mx:Label id="endBPValueLabel"/>
	</mx:HBox>
        
    <mx:Button id="changePartDefButton" label="Change part definition" enabled="false" click="changePartDefinition(event)" toolTip="Change Reverse Complement, Start BP, and/or Stop BP information for this part. Re-map to change part source."/>
	
    <mx:HRule width="100%"/>
        
        <mx:Label text="Forced Assembly Strategy" id="FASLabel" paddingTop="3"/>
        <mx:ComboBox id="fasBox" toolTip="For more information see the j5 manual" change="editJ5FAS(event)" enabled="false" paddingBottom="3"/>
        
        <mx:HRule width="100%"/>
        
        <mx:Label id="eugeneRulesLabel" text="Eugene Rules for selected part" paddingTop="3"/>
        <mx:DataGrid id="eugeneRulesDataGrid" width="100%">
            <mx:columns>
                <mx:DataGridColumn dataField="name" headerText="Name"/>
                <mx:DataGridColumn dataField="operand1.name" headerText="Operand 1"/>
                <mx:DataGridColumn labelFunction="createOperatorLabel" headerText="Operator" sortCompareFunction="operatorSortFunction"/>
                <mx:DataGridColumn labelFunction="createOperand2Label" headerText="Operand 2" sortCompareFunction="operand2SortFunction"/>
            </mx:columns>
        </mx:DataGrid>
        <mx:HBox paddingBottom="3">
            <mx:Button id="addRuleButton" label="Add Rule" click="addRule()" toolTip="Add an Eugene rule to the selected part. (Part must have a name to do this.)" enabled="false"/>
            <mx:Button id="deleteRuleButton" label="Delete Rule" click="deleteRule()" toolTip="Delete selected Eugene rule from selected part." enabled="false"/>
        </mx:HBox>
        
	</mx:VBox>
</mx:Panel>

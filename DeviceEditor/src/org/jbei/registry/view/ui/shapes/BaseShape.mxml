<?xml version="1.0" encoding="utf-8"?>
<!-- Author: Doug Densmore -->
<oh:ObjectHandles  
		 xmlns:mx="http://www.adobe.com/2006/mxml"
		 xmlns:oh="com.roguedevelopment.objecthandles.*"
		 xmlns:degrafa="com.degrafa.*"

		 mouseCursors="{null}"	 
		 >
		  <!-- Can change handles here -->
		 <!--creationComplete="initShape()"-->
	
	<mx:Script>
		<![CDATA[
            import com.degrafa.core.IGraphicsFill;
            import com.degrafa.core.IGraphicsStroke;
            import com.degrafa.paint.GradientStop;
            import com.degrafa.paint.LinearGradientFill;
            import com.degrafa.paint.SolidStroke;
            
            import mx.controls.Label;
            
			[Bindable] public var background:com.degrafa.core.IGraphicsFill;
			[Bindable] public var stroke:com.degrafa.core.IGraphicsStroke;
                        
			protected var _textLabel:Label = new Label();
			            
            private var _position:Point; //TODO: is this needed?
            
			/**
			 * Initialized the fill & stroke for the shape and sets up some event listeners.
			 **/
			public function initShape() : void
			{				
				//Just give it a default coloring; going to be overriden with an image in most cases
				var lg:LinearGradientFill = new LinearGradientFill();
				lg.gradientStops = [
									new GradientStop( 0xFFFFFF, 1 ),
									new GradientStop( 0xFFFFFF, 1 )
									];
				lg.angle=90;									
				background = lg;
											
				sortOrder = -100;
												
			}
			
			public function setTextLabel():void
			{
				
				_textLabel.y = height;
				addChild(_textLabel);
			}
			
            public function setStroke(s:String):void
            {
                var ss:SolidStroke = new SolidStroke();
                ss.color = s;
                ss.weight = 1;
                stroke = ss;
            }
            
            public function setStrokeWeight(w:int):void
            {
                stroke.weight = w;
            }
            
            public function set position(p:Point):void
            {
                _position = p;
                x=position.x;
                y=position.y;
            }
            
            public function get position():Point
            {
                return _position;
            }
            
            public function textLabelValue(s:String):void
			{
				_textLabel.text = s;
			}
			
			public function get textLabel():Label
			{
				return _textLabel;
			}
            
            //prevent any shape changes
            public function completeLock():void
            {
                allowHMove = false;
                allowVMove = false;
                allowHResize = false;
                allowVResize = false;
            }
            
            //Just make sure the shape is in the front
            public function moveToFront():void
            {
                if(parent.numChildren != 0)
                    parent.addChildAt(this, parent.numChildren - 1);
            }
            
            //Just lock the size
            public function sizeLock():void
            {
                //FIXME - if I don't allow something there is no visual cue that something is selected
                //_baseShape.allowHResize = false;
                //_baseShape.allowVResize = false;
                alwaysMaintainAspectRatio = true;
            }
            
//            public function updateLabel(s:String):void
//            {		
//                textLabelValue(s);
//            }
            
            public function setLabel():void
            {
                setTextLabel();
            }
		]]>
	</mx:Script>
	
</oh:ObjectHandles>

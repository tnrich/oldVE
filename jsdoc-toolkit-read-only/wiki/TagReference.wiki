#summary A list of every tag.
#labels Featured

  * [TagAugments @augments] - Indicate this class uses another class as its "base."
  * [TagAuthor @author] - Indicate the author of the code being documented.
  * @argument - Deprecated synonym for [TagParam @param].
  * [TagBorrows @borrows] _that_ as _this_ - Document that class's member as if it were a member of this class.
  * [TagClass @class] - Provide a description of the class (versus the constructor).
  * [TagConstant @constant] - Indicate that a variable's value is a constant.
  * [TagConstructor @constructor] - Identify a function is a constructor.
  * [TagConstructs @constructs] - Identicate that a lent function will be used as a constructor.
  * [TagDefault @default] - Describe the default value of a variable.
  * [TagDeprecated @deprecated] - Indicate use of a variable is no longer supported.
  * [TagDescription @description] - Provide a description (synonym for an untagged first-line).
  * [TagEvent @event] - Describe an event handled by a class.
  * [TagExample @example] - Provide a small code example, illustrating usage.
  * @extends - Synonym for [TagAugments @augments].
  * [TagField @field] - Indicate that the variable refers to a non-function.
  * [TagFileOverview @fileOverview] - Provides information about the entire file.
  * [TagFunction @function] - Indicate that the variable refers to a function.
  * [TagIgnore @ignore] - Indicate !JsDoc Toolkit should ignore the variable.
  * [TagInner @inner] - Indicate that the variable refers to an inner function (and so is also @private).
  * [TagLends @lends] - Document that all an object literal's members are members of a given class.
  * {[TagLink @link] ...} - Like [TagSee @see] but can be used within the text of other tags.
  * [TagMemberOf @memberOf] - Document that this variable refers to a member of a given class.
  * [TagName @name] - Force !JsDoc Toolkit to ignore the surrounding code and use the given variable name instead.
  * [TagNamespace @namespace] - Document an object literal is being used as a "namespace."
  * [TagParam @param] - Describe a function's parameter.
  * [TagPrivate @private] - Indicate a variable is private (use the -p command line option to include these).
  * [TagProperty @property] - Document a property of a class from within the constructor's doclet.
  * [TagPublic @public] - Indicate an inner variable is public.
  * [TagRequires @requires] - Describe a required resource.
  * [TagReturns @returns] - Describe the return value of a function.
  * [TagSee @see] - Describe a related resource.
  * [TagSince @since] - Indicate that a feature has only been available on and after a certain version number.
  * [TagStatic @static] - Indicate that accessing the variable does not require instantiation of its parent.
  * [TagThrows @throws] - Describe the exception that a function might throw.
  * [TagType @type] - Describe the expected type of a variable's value or the value returned by a function.
  * [TagVersion @version] - Indicate the release version of this code.